package view;

import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

import service.Servidor;

/**
 *
 * @author yury-antergos
 */
public class ServidorGUI extends javax.swing.JFrame {

    Servidor servidor;
    // porta padrao do servidor
    int portaServidor = Servidor.porta;
    
    /**
     * Creates new form ServidorGUI
     */
    public ServidorGUI() {
        initComponents();
        
        // coneca ao servidor
        iniciaServidor();
        
        // exibe a porta padrao do servidor
        this.txtPortaServidor.setText(Integer.toString(this.portaServidor));
        
        // exibe a janela do chat
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPortaServidor = new javax.swing.JTextField();
        btnConectar = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        btnAlterarPorta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Servidor - SMASP");
        setResizable(false);
        setSize(new java.awt.Dimension(269, 204));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("Porta:");

        txtPortaServidor.setDisabledTextColor(new java.awt.Color(102, 153, 255));
        txtPortaServidor.setEnabled(false);
        txtPortaServidor.setMargin(new java.awt.Insets(0, 10, 0, 0));

        btnConectar.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        btnConectar.setText("iniciar");
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        lblStatus.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(153, 0, 0));
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText("parado");

        btnAlterarPorta.setText("alterar");
        btnAlterarPorta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarPortaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarPorta))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(btnConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(lblStatus)
                .addGap(26, 26, 26)
                .addComponent(btnConectar)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPortaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterarPorta))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        if(this.btnConectar.getText().equals("iniciar")){
            iniciaServidor();
        }
        else{
            paraServidor();
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnAlterarPortaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarPortaActionPerformed
        if(this.txtPortaServidor.isEnabled()){            
            if(!txtPortaServidor.getText().trim().isEmpty()){
                try{
                    // converte para número
                    int numPorta = Integer.parseInt(txtPortaServidor.getText().trim());

                    // verifica se está dentro da faixa permitida
                    // abaixo de 1024 são reservadas do sistema
                    // 65535 é o limite máximo
                    if(numPorta > 1024 && numPorta <= 65535){                        
                        // salva a nova porta do servidor
                        this.portaServidor = Integer.parseInt(this.txtPortaServidor.getText());
                        
                        // desabilita a alteracao da porta do servidor
                        this.txtPortaServidor.setEnabled(false);
                        this.btnConectar.setEnabled(true);
                        this.btnAlterarPorta.setText("alterar");
                    }
                    else{
                    	mostrarMensagem("A porta deve estar entre 1024 e 65535");
                    }
                }
                catch(NumberFormatException ex){
                	mostrarMensagem("A porta deve ter somente números");
                }
                catch(NullPointerException ex){}
            }
            else{
            	// desabilita a alteracao da porta do servidor
                this.txtPortaServidor.setEnabled(false);
                this.btnConectar.setEnabled(true);
                this.btnAlterarPorta.setText("alterar");
                
                // exibe a porta padrao do servidor
                this.txtPortaServidor.setText(Integer.toString(this.portaServidor));
            }
        }
        else{
            this.btnAlterarPorta.setText("OK");
            // permite ao usuario alterar a porta do servidor
            this.txtPortaServidor.setEnabled(true);
            
            this.btnConectar.setEnabled(false);
        }
    }//GEN-LAST:event_btnAlterarPortaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // para o servidor
        this.servidor.para();
        
        // fecha a janela do servidor
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServidorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ServidorGUI();
            }
        });
    }
    
    // inicia o servidor
    private void iniciaServidor(){
        // inicia o servidor
        servidor = new Servidor(this);
        servidor.inicia(this.portaServidor);
        
        // monstra as informaçoes na tela
        if(servidor.isIniciado()){
            this.lblStatus.setText("iniciado");
            this.lblStatus.setForeground(new java.awt.Color(0, 102, 0));
            
            this.txtPortaServidor.setText(Integer.toString(servidor.getPorta()));
           
            this.btnConectar.setText("parar");
            
            this.btnAlterarPorta.setEnabled(false);
        }
    }
    
    // finaliza o servidor
    private void paraServidor(){
        // para o servidor
        this.servidor.para();
        
        // monstra as informaçoes na tela
        if(!servidor.isIniciado()){
            this.lblStatus.setText("parado");
            this.lblStatus.setForeground(new java.awt.Color(153, 0, 0));
            
            this.txtPortaServidor.setText(Integer.toString(this.servidor.getPorta()));
           
            this.btnConectar.setText("iniciar");
            
            this.btnAlterarPorta.setEnabled(true);
        }
    }
    
    // exibe mensagens para o usuário
    public void mostrarMensagem(String msg){
        JOptionPane.showMessageDialog(null, msg);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarPorta;
    private javax.swing.JButton btnConectar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtPortaServidor;
    // End of variables declaration//GEN-END:variables
}
